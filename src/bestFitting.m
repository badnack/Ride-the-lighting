% Solve an Input-Output Fitting problem with a Neural Network
% Script generated by Celli Alessio, Rafanelli Davide
%

% load files
load ../data/inputWork.csv;
load ../data/targetWork.csv;

inWork = inputWork';
tarWork = targetWork';


ERROR_TO_REACH = 0.02;

% Re-training attempts using the same network but changing the weights
RETRAIN_ATTEMPT = 20;

% Minimum value of regression that system want to reach
REGRESSION_TO_REACH = 0.91;

% Initial numbers of hidden neurons
INIT_HIDDEN_LAYER_SIZE = 13;

% Maximum amount of hidden neuron
MAX_HIDDEN_LAYER_SIZE = 21;

% Setup Division of Data for Training, Validation, Testing
TRAIN     =  0.9;
VALUATION = 0.05;
TEST      = 0.05;


% Variables initilizations
bestThreshError = inf;
bestRegression = 0;
stop = 0;
hiddenLayerSize = INIT_HIDDEN_LAYER_SIZE;

while ( stop == 0 )

  net = fitnet ( hiddenLayerSize );


  net.divideParam.trainRatio = TRAIN;
  net.divideParam.valRatio   = VALUATION;
  net.divideParam.testRatio  = TEST;

  for i = 1:RETRAIN_ATTEMPT
    net = init ( net );
    
    % Train the Network
    [ net, tr ] = train ( net, inWork, tarWork );

    % Test the Network 
    outputs     = net ( inWork );
    currentErrors      = gsubtract ( tarWork,outputs );
    performance = perform ( net, tarWork, outputs );

    % ad-hoc functions
    currentRegression  = getRegression ( tarWork, outputs )
    currentThreshError = Errhis ( currentErrors )
    

    if ( abs ( currentThreshError ) < abs ( bestThreshError ) && currentRegression > bestRegression )        

        % Best value Reached
        if ( abs ( currentThreshError ) <= ERROR_TO_REACH  && currentRegression >= REGRESSION_TO_REACH )
            stop = 1;
        end
        
        bestTraining = tr;
        
        bestOutputs = outputs;
        bestErrors = currentErrors;
        
        bestThreshError = currentThreshError;
        bestRegression = currentRegression;
        
    end

  end

  hiddenLayerSize = hiddenLayerSize + 1;
  
  if ( hiddenLayerSize == MAX_HIDDEN_LAYER_SIZE )
      stop = 1;
  end
 
      
end

% View the Network
view ( net )

% Plots

figure, plotperform ( bestTraining )
figure, plotregression ( tarWork, bestOutputs )
figure, ploterrhist ( bestErrors )
